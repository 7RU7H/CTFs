(function(a,b){if(typeof define==="function"&&define.amd){define(["lodash","./symmetry-jnap","./side-effects-manager","./device-manager"],b)}else{if(typeof module==="object"&&module.exports){module.exports=b(require("lodash"),require("./symmetry-jnap"),require("./side-effects-manager"),require("./device-manager"))}else{a.utilFirmwareUpdate=b((a.lodash||a._),a.JNAP,a.sideEffectsManager,a.deviceManager)}}}(this,function(ak,r,T,W){var aa;var j=12*60*1000;var G=8*60*1000;var d,L,ac=[],g,c,P,ab,n,ai,N,Y,k,J,ad,Q,U,t,m,ag,o=false,S=null,A=null,R,z,v,F,O="[not found]",a="[no update available]",K="[ firmware-update ]";var B=/(\d+)\..+/;function s(an){var al;if(o){var am=ak.result(ad,"output.firmwareUpdateStatus",{});al=ak.result(ak.find(am,"lastOperationFailure"),"lastOperationFailure","[UpdateFailed]")}else{al=ak.result(ad,"output.lastOperationFailure","[UpdateFailed]")}F("error","lastOperationFailure reported:",al);ab(ad);an(true)}function i(al){r.send("/firmwareupdate/GetFirmwareUpdateStatus").success(function(am){var ao=ak.result(am,"output",{}),ap=ao.lastSuccessfulCheckTime&&(ao.lastSuccessfulCheckTime!==d),an=ak.result(ao,"pendingOperation.operation")==="Checking";ad=am;Q=ak.result(ao,"lastOperationFailure");if(Q){s(al);return}else{if(ak.has(ao,"availableUpdate")||(ap&&!an)){al(true)}else{al(false)}}}).error(function(){al(false)})}function M(al){r.send("/nodes/firmwareupdate/GetFirmwareUpdateStatus").success(function(am){var ao=ak.result(am,"output.firmwareUpdateStatus",[]),aq=(k<=ao.length),an=ak.find(ao,"pendingOperation")||!aq;var ap=!ak.isEmpty(ao)&&ak.find(ao,"lastSuccessfulCheckTime")&&d<X(am,Math.min);ad=am;Q=ak.find(ao,"lastOperationFailure");if(Q){s(al);return}al(ap&&!an)}).error(function(){al(false)})}function f(al){r.send("/firmwareupdate/GetFirmwareUpdateStatus").success(function(am){var ao=ak.result(am,"output",{}),ap,an;ad=am;Q=ak.result(ao,"lastOperationFailure");if(Q){s(al);return}else{if(ao.pendingOperation){ap=ao.pendingOperation.operation;an=ao.pendingOperation.progressPercent}}if(!ap&&am.result==="OK"){c(al);return}else{if(ap==="Checking"){n(an/6,ap)}else{if(ap==="Downloading"){n(16.5+an/6,ap)}else{if(ap==="Installing"){n(33+an/3,ap)}else{if(ap==="Rebooting"){ai()}}}}}al(false)}).error(function(){ai();al(false)})}function x(am,al){return ak.find(am,function(an){return ak.result(an,"pendingOperation.operation")===al})}function V(al){return ak.find(ak.result(al,"output.firmwareUpdateStatus"),function(am){return ak.result(am,"pendingOperation.progressPercent")===100})}function X(al,an){var am=an();ak.each(ak.result(al,"output.firmwareUpdateStatus"),function(ao){if(ao.lastSuccessfulCheckTime){am=an(am,aa.time.routerTimeToDate(ao.lastSuccessfulCheckTime))}});return am}function p(al){return al.isOnline}function C(am,aq){var ao=2,ap=22,al=26,an=50;if(U==="Rebooting"||am==="Rebooting"){if(U!=="Rebooting"){T.fakeProgress.start(function(ar){n(ao+ap+al+(ar*an/100),"Rebooting")},j*an/100)}U="Rebooting"}else{if(U==="Installing"||am==="Installing"){if(!T.fakeProgress.isRunning()){T.fakeProgress.start(function(ar){n(ao+ap+(ar*al/100),"Installing")},j*al/100)}U="Installing"}else{if(am==="Downloading"){n(ao+(aq*ap/100),"Downloading");U=am}else{if(am==="Checking"){n(aq*ao/100,"Downloading");U=am}}}}}function b(){if(S){S=null;F("info","finallyFunction - FW op no longer in progress");if(T.fakeProgress.isRunning()){T.fakeProgress.stop()}if(Y){W.setOptions({doPolling:true})}}}function D(am){o=r.isFeatureSupported("Node");var al=o?"/nodes/firmwareupdate/GetFirmwareUpdateStatus":"/firmwareupdate/GetFirmwareUpdateStatus",an=o?45:15;if(S){F("warn","firmwareCheck - FW op already in progress, exiting (opInProgress)",S);return}if(!ak.isFunction(am.success)){throw"Missing success callback"}if(!ak.isFunction(am.error)){throw"Missing error callback"}A=S="Check";am.timeStart=(new Date()).getTime();aa.logging.clearLogKey(K);F("info","firmwareCheck - No FW op in progress, initiating check (timeStart):",am.timeStart);r.send(al).success(function(ao){if(o){d=X(ao,Math.max);W.getDevices(true,true).success(function(){k=ak.filter(W.nodes.getAll(),p).length;F("info","firmwareCheck - Online Nodes:",k);H(am,M,an,true)})}else{d=ao.output.lastSuccessfulCheckTime;H(am,i,an,true)}}).error(am.error)}function ah(al){if(!al){ab("ConnectivityFailure")}else{Z(null)}}function Z(an,am){var al=ak.isFunction(an);am=am||0;c(function(ao){if(!an&&!ao){F("info","Unable to talk to Router, polling for Reconnection for up to 6 mins");var ar=(new Date()).getTime()+6*60*1000,ap=3*1000,aq=5*1000;T.poll(c,ah,null,ar,ap,aq)}else{if(!al){F("info","Creating final callback");an=function(at){if(!at){F("info","checkInternetAndNodesUpdates - retrying (retryCount):",am);if(am<36){setTimeout(function(){Z(an,++am)},5*1000)}else{ab("FWUpdateFailed")}}else{P(true)}}}q(ao,an)}})}function h(am){if(R){return am(true)}var al={supportedForCaching:{"/core/GetDeviceInfo":false}};r.send("/core/GetDeviceInfo",{},al).success(function(an){var ao=ak.result(an,"output.firmwareVersion");R=ao===L;F("info","isRouterUpdatedAndMatching (isFirmwareUpdateSuccessful, authority.unit.firmwareVersion):",R,ao);am(R)}).error(function(){am(false)})}function w(ao){var am=ak.result(ao,"model.modelNumber",O),al=ak.result(ao,"unit.firmwareVersion",O),an=ak.result(ao,"model.hardwareVersion",al.replace(B,"$1"));if(an!==O){am+="v"+an}return am}function e(){var al=r.Deferred();W.getDevices(true,true).success(function(){var am=ak.filter(W.nodes.getAll(),p),an=ak.map(am,function(ap){var ao=ap.deviceID;return{deviceID:ao,deviceIcon:ap.deviceIcon,deviceName:ap.deviceName,model:w(ap),currentVersion:ak.result(ap,"unit.firmwareVersion",O),availableVersion:ak.result(ak.find(ac,{deviceID:ao}),"availableVersion",O)}});al.resolve(an)}).error(function(am){al.reject(am)});return al}function af(al){if(R){return al(true)}e().success(function(ap){var ao=(k<=ap.length),an=true;var am=ak.filter(ac,function(aq){return aq.availableVersion!==a});ak.each(am,function(ar){var aq=ak.find(ap,{deviceID:ar.deviceID})||{currentVersion:O};if(aq.currentVersion!==ar.availableVersion){an=false;return false}});R=ao&&an;F("info","areAllNodesUpdatedAndMatching (initialNodesCount, nodesCountMatches, areAllNodesUpdated, nodeVersions):",k,ao,an,aa.formatter.jsonToTable(ap,["deviceID","deviceName","currentVersion","availableVersion"]));if(!an){F("warn","Not all Nodes received availableVersion seen during Check (lastAvailableUpdateVersions)",ac)}al(R)}).error(function(am){F("error","failed to retrieve Nodes from Device Manager:",am);al(false)})}function ae(al){ab=function(an){Q=Q||an;if(S){var am=ak.result(an,"output",an),ap="errorCallback - FW "+(ag?"Check":"Update")+" failed",ao={"log-keys":true};if(an===ad){ak.extend(ao,{lastFwUpdateStatus:am})}else{ak.extend(ao,{error:am,lastFwUpdateStatus:ad})}if(!al.timeEnd){al.timeEnd=(new Date()).getTime();ak.extend(ao,{timeStamp:al.timeEnd})}F("error",ap,ao);b();al.error(an)}};P=function(an){al.timeEnd=(new Date()).getTime();var ap={"SEM pollingSucceeded":an,timeStart:al.timeStart,timeEnd:al.timeEnd,timeFromStart:aa.time.getElapsedMsReadable(al.timeStart)};F("info","completeCallback",ap);var aq=ak.result(ad,"output.lastOperationFailure");var ao=!ak.isEmpty(ak.result(ad,"output.firmwareUpdateStatus"))&&ak.find(ad.output.firmwareUpdateStatus,"lastOperationFailure");var am=!ak.isEmpty(ak.result(ad,"output.firmwareUpdateStatus"))&&ak.find(ad.output.firmwareUpdateStatus,"pendingOperation");if(an&&ad.result==="OK"&&!aq&&!ao){F("info","completeCallback - FW "+(ag?"Check":"Update")+" successful (lastFwUpdateStatus):",ak.result(ad,"output",ad));if(ag){al.success(ad)}else{if(o){af(function(ar){if(ar){al.success(ad)}else{F("warn","completeCallback - areAllNodesUpdatedAndMatching returned false, calling errorCallback with lastFwUpdateStatus");ab(ad)}})}else{h(function(ar){if(ar){al.success(ad)}else{F("warn","completeCallback - isRouterUpdatedAndMatching returned false, calling errorCallback with lastFwUpdateStatus");ab(ad)}})}}}else{if(V(ad)){Z(null);return}else{if(!an&&U&&!ao&&!am){Z(null);return}else{ab(an?ad:"TimeoutError")}}}b()};ai=function(){if(!T.fakeRebootProgress.isRunning()){T.fakeRebootProgress.start(function(am){n(66+2/3+am/3,"Rebooting")})}};n=function(ap,am){var ao=N+ap;if(z!==am){var an=(new Date()).getTime(),aq={currentOp:am,reportedProgress:ak.round(ao,2)+"%",timeStamp:an,timeFromStart:aa.time.getElapsedMsReadable(al.timeStart)};if(v){aq.timeFromLastOp=aa.time.getElapsedMsReadable(v)}F("info","progressCallback - operation has changed",aq);z=am;v=(new Date()).getTime()}al.progress(ao,am)};N=al.progressOffset||0;U=null;ad=null;Q=null;g=null;t=0;J=0;m=false;ag=false;R=false;z="Checking";v=null}function q(al,am){if(!al){am(al)}else{if(J%4!==0){J++;am(false)}else{J++;af(am)}}}function l(am){var al;r.send("/nodes/firmwareupdate/GetFirmwareUpdateStatus").success(function(an){var ao=ak.result(an,"output.firmwareUpdateStatus",[]),ap=ak.find(ao,"pendingOperation");g=null;ad=an;Q=ak.find(ao,"lastOperationFailure");if(!ap&&Q){s(am);return}else{if(ap){t=0}else{if(!m){t++;if(t===25){m=true;F("info","isNodesFWUpdateCompleted - No pendingOps seen for 25 times in a row, setting doConfirmUpdate to true")}else{if(U==="Rebooting"){m=true;F("info","isNodesFWUpdateCompleted - Rebooting op reported, setting doConfirmUpdate to true")}}}}}if(m){Z(am);return}else{if(x(ao,"Rebooting")){C("Rebooting")}else{if(x(ao,"Installing")){C("Installing")}else{if(x(ao,"Downloading")){al=x(ao,"Downloading").pendingOperation.progressPercent;C("Downloading",al)}else{if(x(ao,"Checking")){al=x(ao,"Checking").pendingOperation.progressPercent;C("Checking",al)}}}}}am(false)}).error(function(an){if(!g){g=(new Date()).getTime()}if(U==="Rebooting"||U==="Installing"){C("Rebooting");am(false)}else{if((new Date()).getTime()-g<=G){F("warn","contact lost for under 8 minutes, continuing polling (operationReported):",U);C(U);am(false)}else{F("error","contact lost for 8 minutes (operationReported):",U);ad=an;am(true)}}})}function H(ap,am,an,au){var al=o?"/nodes/firmwareupdate/UpdateFirmwareNow":"/firmwareupdate/UpdateFirmwareNow";var aq=au?0:5000,ar=au?2000:2500,at=ap.pollingTimeout||2500,ao=ak.has(ap,"timeStopAt")?ap.timeStopAt:null;an=ak.has(ap,"retryAttempts")?ap.retryAttempts:an;ap=ak.cloneDeep(ap);ae(ap);ag=au;c=ag?ak.noop:T.getTestRouterReconnectedFunc();Y=W.getOptions().doPolling;if(Y){W.setOptions({doPolling:false})}setTimeout(function(){r.send(al,{onlyCheck:au}).success(function(){if(!au){ap.progress(N,ag?"StartingCheck":"StartingDownload")}T.poll(am,P,an,ao,at,ar)}).error(ab)},aq)}function y(al){o=r.isFeatureSupported("Node");var am=o?"/nodes/firmwareupdate/GetFirmwareUpdateStatus":"/firmwareupdate/GetFirmwareUpdateStatus";if(S){F("warn","firmwareUpdate - FW op already in progress, exiting (opInProgress)",S);return}if(!ak.isFunction(al.success)){throw"Missing success callback"}if(!ak.isFunction(al.error)){throw"Missing error callback"}if(!ak.isFunction(al.progress)){throw"Missing progress callback"}A=S="Update";al.timeStart=(new Date()).getTime();aa.logging.clearLogKey(K);F("info","firmwareUpdate - No FW op in progress, initiating update (timeStart):",al.timeStart);r.send(am).success(function(an){if(o){ac=[];if(ak.has(an,"output.firmwareUpdateStatus")){if(ak.find(an.output.firmwareUpdateStatus,"pendingOperation")){al.error("UpdateOrCheckInProgress");return}}else{F("warn","No firmwareUpdateStatuses returned")}W.getDevices(true,true).success(function(){k=ak.filter(W.nodes.getAll(),p).length;ac=ak.map(an.output.firmwareUpdateStatus,function(ap){var ao=W.getDeviceByID(ap.deviceUUID);return{deviceID:ap.deviceUUID,deviceName:ao.deviceName,currentVersion:ak.result(ao,"unit.firmwareVersion",O),availableVersion:ak.result(ap,"availableUpdate.firmwareVersion",a)}});F("info","Starting Nodes FW Update (online Nodes, lastAvailableUpdateVersions):",k,aa.formatter.jsonToTable(ac,["deviceID","deviceName","currentVersion","availableVersion"]));H(al,l,336,false)}).error(al.error)}else{L=ak.result(an.output,"availableUpdate.firmwareVersion");F("info","Starting FW Update (lastAvailableUpdateVersion):",L);H(al,f,180,false)}}).error(al.error)}function u(){return aa.logging.getLogKey(K)}function I(){return S}function aj(){return A}function E(){return Boolean(Q)}return function(al){aa=al;F=aa.logging.setup(K,true);return{check:D,update:y,getRouterModelLabel:w,isRouterUpdatedAndMatching:h,getNodesFirmwareVersions:e,areAllNodesUpdatedAndMatching:af,getLatestCombinedLogs:u,getOpInProgress:I,getLastOpPerformed:aj,isLastOpFailed:E}}}));